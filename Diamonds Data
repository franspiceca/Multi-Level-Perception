import pandas as pd
from seaborn import load_dataset
from sklearn.model_selection import train_test_split      
from sklearn.neural_network import MLPClassifier          
import warnings

warnings.filterwarnings('ignore')

from seaborn import load_dataset
df = load_dataset("diamonds")
df.head()

##Preparing data for classification (turning into cateogrical for processing)
df.cut = pd.Categorical(df.cut)
df.color = pd.Categorical(df.color)
df.clarity = pd.Categorical(df.clarity)

df.cut = df.cut.cat.codes 
df.color = df.color.cat.codes
df.clarity = df.clarity.cat.codes
df.head()

##Defining discrete and countinuous features
discrete_features = ['cut', 'color']
continuous_features = ['carat', 'depth', 'table', 'x', 'y', 'z']

##Defining X and y for ML
X = df[continuous_features + discrete_features]
y = df['price']

##Splitting testing and training data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

##Dropping any null values
df[df.isnull().any(axis=1)]
df = df.dropna()

##Defining my Multi-Level Perception ML model
from sklearn.neural_network import MLPClassifier

mlp = MLPClassifier(hidden_layer_sizes=(100, ), random_state=0)

##Fitting my data
mlp.fit(X_train, y_train)

##Scoring my training data
mlp.score(X_train, y_train)

##Scoring my testing data
mlp.score(X_test, y_test)

##Example input to test out model
diamond1 = {"carat": 0.25, 
           "cut": 2,
           "color": 5,
           "clarity": 1,
           "depth": 62.6,
           "table": 58,
           "price": 340,
           "x": 3.93,
           "y": 4.07,
           "z": 2.73}

##Predict with input from above
mlp.predict(diamond1)
